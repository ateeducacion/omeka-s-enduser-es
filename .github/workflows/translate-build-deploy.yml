name: Sync & Translate Omeka S Manual (es)

on:
  schedule:
    - cron: "17 3 * * *"   # daily, 03:17 Europe/Madrid
  workflow_dispatch: {}
  push:
    branches: [ master ]

permissions:
  contents: write   # needed to push translations and gh-pages
  id-token: write

concurrency:
  group: translate-build-deploy
  cancel-in-progress: true

jobs:
  sync-and-translate:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout this fork repository
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      # 1.1) Configure Git auth so future 'git push' uses GITHUB_TOKEN
      - name: Configure Git auth
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

      # 2) Add upstream remote and fast-forward/merge into this fork's master
      - name: Sync fork with upstream (manual git)
        run: |
          set -euo pipefail
          git remote add upstream https://github.com/omeka/omeka-s-enduser.git || true
          git fetch upstream master
          git checkout master
          # Try fast-forward first; if not possible, do a merge commit
          if git merge-base --is-ancestor HEAD upstream/master; then
            echo "Already up to date."
          else
            git merge --ff-only upstream/master || git merge --no-edit upstream/master
            git push origin master
          fi

      # 3) Detect changed Markdown files since last merge base
      - name: Get changed Markdown files
        id: changed
        uses: tj-actions/changed-files@v47
        with:
          files: |
            docs/**/*.md
          since_last_remote_commit: false

      - name: Debug changed files
        run: |
          echo "Any changed: ${{ steps.changed.outputs.any_changed }}"
          echo "All changed:"
          printf "%s\n" ${{ steps.changed.outputs.all_changed_files }}

      # 4) Setup Node (required by some marketplace actions)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 5) Translate only changed files into docs/es/
      - name: Translate changed files to Spanish
        if: steps.changed.outputs.any_changed == 'true'
        uses: lyqht/deepl-translate-github-action@v2
        with:
          target_lang: ES
          glob_patterns: ${{ steps.changed.outputs.all_changed_files }}
          output_dir: docs/es
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}

      # 6) Commit translated files back to master
      - name: Commit translated files
        if: steps.changed.outputs.any_changed == 'true'
        run: |
          git add docs/es
          git commit -m "chore(i18n): update ES translations for changed docs" || echo "No changes"
          git push origin master

      # 7) Setup Python for MkDocs build
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 8) Install MkDocs + i18n plugin
      - name: Install MkDocs + i18n
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-static-i18n

      # 9) Build site with overlay mkdocs-es.yml (Spanish as default)
      - name: Build site (i18n overlay)
        run: |
          test -f mkdocs-es.yml || (echo "mkdocs-es.yml missing" && exit 1)
          mkdocs build --clean -f mkdocs-es.yml

      # 10) Deploy to GitHub Pages (gh-pages branch)
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./site
          force_orphan: true
