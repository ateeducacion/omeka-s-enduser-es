name: Sync & Translate Omeka S Manual (es)

on:
  schedule:
    - cron: "17 3 * * *"   # daily, 03:17 Europe/Madrid
  workflow_dispatch: {}
  push:
    branches: [ master ]

permissions:
  contents: write   # push translations to master
  pages: write      # upload & deploy GitHub Pages artifact
  id-token: write   # required by actions/deploy-pages

concurrency:
  group: translate-build-deploy
  cancel-in-progress: true

jobs:
  sync-and-translate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Configure Git auth
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

      - name: Sync fork with upstream (manual git)
        run: |
          set -euo pipefail
          git remote add upstream https://github.com/omeka/omeka-s-enduser.git || true
          git fetch upstream master
          git checkout master
          if git merge-base --is-ancestor HEAD upstream/master; then
            echo "Already up to date."
          else
            git merge --ff-only upstream/master || git merge --no-edit upstream/master
            git push origin master
          fi

      # ---- Bootstrap check: translate ALL if docs/es is missing or empty
      - name: Check if Spanish tree exists
        id: boots
        run: |
          set -euo pipefail
          if [ -d "docs/es" ] && find docs/es -type f -name "*.md" | grep -q .; then
            echo "need_bootstrap=false" >> "$GITHUB_OUTPUT"
          else
            echo "need_bootstrap=true" >> "$GITHUB_OUTPUT"
          fi
          echo "need_bootstrap=$(cat $GITHUB_OUTPUT | sed -n 's/^need_bootstrap=//p')" || true

      # ---- Incremental diff for when we already have docs/es
      - name: Get changed Markdown files
        id: changed
        if: steps.boots.outputs.need_bootstrap == 'false'
        uses: tj-actions/changed-files@v47
        with:
          files: |
            docs/**/*.md
          since_last_remote_commit: false

      - name: Debug changed files
        if: steps.boots.outputs.need_bootstrap == 'false'
        run: |
          echo "Any changed: ${{ steps.changed.outputs.any_changed }}"
          printf "%s\n" ${{ steps.changed.outputs.all_changed_files }}

      # ---- Setup Node (required by DeepL action runtime)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # ---- Bootstrap translation: translate ALL .md on first run
      - name: Translate ALL docs to Spanish (bootstrap)
        if: steps.boots.outputs.need_bootstrap == 'true'
        uses: lyqht/deepl-translate-github-action@v2
        with:
          target_lang: ES
          glob_patterns: |
            docs/**/*.md
          output_dir: docs/es
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}

      # ---- Incremental translation: only changed files
      - name: Translate changed files to Spanish
        if: steps.boots.outputs.need_bootstrap == 'false' && steps.changed.outputs.any_changed == 'true'
        uses: lyqht/deepl-translate-github-action@v2
        with:
          target_lang: ES
          glob_patterns: ${{ steps.changed.outputs.all_changed_files }}
          output_dir: docs/es
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}

      # ---- Commit translations
      - name: Commit translated files
        if: steps.boots.outputs.need_bootstrap == 'true' || steps.changed.outputs.any_changed == 'true'
        run: |
          git add docs/es
          git commit -m "chore(i18n): bootstrap/update ES translations" || echo "No changes"
          git push origin master

      # ---- Build site
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install MkDocs + i18n
        run: |
          python -m pip install --upgrade pip
          pip install "mkdocs>=1.5" mkdocs-material "mkdocs-static-i18n>=1.2,<2.0"
          python -c "import mkdocs_i18n; print('mkdocs-static-i18n:', mkdocs_i18n.__version__)"

      - name: Build site (i18n overlay)
        run: |
          test -f mkdocs-es.yml || (echo "mkdocs-es.yml missing" && exit 1)
          mkdocs build --clean -f mkdocs-es.yml

      # ---- Publish to GitHub Pages via artifact (no gh-pages branch)
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    runs-on: ubuntu-latest
    needs: sync-and-translate
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
